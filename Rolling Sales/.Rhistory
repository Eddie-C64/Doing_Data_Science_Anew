getwd()
install.packages('reshape2')
?cut
setwd("CodingComplication/DataScienceProjects/EDA_Udacity/Multi_Variable_Exploration)
library('ggplot2')
data(diamonds)
qplot(data = diamonds, x = carat, y = price,
xlim = c(0, quantile(diamonds$carat, 0.99)),
ylim = c(0, quantile(diamonds$price, 0.99))) +
geom_point(color = I('black'), shape = 21)
qplot(data = diamonds, x = carat, y = price,
xlim = c(0, quantile(diamonds$carat, 0.99)),
ylim = c(0, quantile(diamonds$price, 0.99))) +
geom_point(color = I('blue'), shape = 21)
ggplot(data = diamonds,aes( x = carat, y = price)) +
scale_x_continuous(lim = c(0, quantile(diamonds$carat, 0.99))) +
scale_y_continuous(lim = c(0, quantile(diamonds$price, 0.99))) +
geom_point(color = I('blue'), alpha = 1/4)
ggplot(data = diamonds,aes( x = carat, y = price)) +
scale_x_continuous(lim = c(0, quantile(diamonds$carat, 0.99))) +
scale_y_continuous(lim = c(0, quantile(diamonds$price, 0.99))) +
geom_point(color = I('blue'), alpha = 1/4) +
stat_smooth(method = 'lm', formula = price ~ log(carat), se = F)
```
ggplot(data = diamonds,aes( x = carat, y = price)) +
scale_x_continuous(lim = c(0, quantile(diamonds$carat, 0.99))) +
scale_y_continuous(lim = c(0, quantile(diamonds$price, 0.99))) +
geom_point(color = I('blue'), alpha = 1/4) +
stat_smooth(method = 'lm', formula = diamonds$price ~ log(diamonds$carat), se = F)
library(GGally)
library(ggplot2)
library(scales)
library(memisc)
library(lattice)
library(MASS)
library(car)
library(reshape)
library(plyr)
data(diamonds)
ggplot(data = diamonds,aes( x = carat, y = price)) +
scale_x_continuous(lim = c(0, quantile(diamonds$carat, 0.99))) +
scale_y_continuous(lim = c(0, quantile(diamonds$price, 0.99))) +
geom_point(color = I('blue'), alpha = 1/4) +
stat_smooth(method = 'lm', formula = diamonds$price ~ log(diamonds$carat), se = F)
install.packages("car")
install.packages("scale")
install.packages("scales")
install.packages("scales")
install.packages("scales")
install.packages("scales")
install.packages("scales")
install.packages("memisc")
install.packages("MASS")
install.packages("reshape")
install.packages("plyr")
install.packages("plyr")
library(GGally)
library(ggplot2)
library(scales)
library(memisc)
library(lattice)
library(MASS)
library(car)
library(reshape)
library(plyr)
data(diamonds)
ggplot(data = diamonds,aes( x = carat, y = price)) +
scale_x_continuous(lim = c(0, quantile(diamonds$carat, 0.99))) +
scale_y_continuous(lim = c(0, quantile(diamonds$price, 0.99))) +
geom_point(color = I('blue'), alpha = 1/4) +
stat_smooth(method = 'lm', formula = diamonds$price ~ log(diamonds$carat), se = F)
library(GGally)
library(ggplot2)
library(scales)
library(memisc)
library(lattice)
library(MASS)
library(car)
library(reshape)
library(plyr)
library(gridExtra)
plot1 <- qplot(data = diamonds, x = carat, y = price) +
ggtitle('Price')
plot2 <- qplot(data = diamonds, x = log(carat), y = price) +
ggtitle('Price (log10)')
grid.arrange()
install.packages("gridExtra")
library(gridExtra)
plot1 <- qplot(data = diamonds, x = carat, y = price) +
ggtitle('Price')
plot2 <- qplot(data = diamonds, x = log(carat), y = price) +
ggtitle('Price (log10)')
grid.arrange()
library(gridExtra)
plot1 <- qplot(data = diamonds, x = price) +
ggtitle('Price')
plot2 <- qplot(data = diamonds, x = price) +
ggtitle('Price (log10)')
+ scale_x_log10()
grid.arrange()
install.packages(grid)
install.packages("grid")
install.packages("grid")
library(gridExtra)
library(grid)
plot1 <- qplot(data = diamonds, x = price) +
ggtitle('Price')
plot2 <- qplot(data = diamonds, x = price) +
ggtitle('Price (log10)')
+ scale_x_log10()
grid.arrange(plot1, plot2, ncol = 2)
plot1 <- qplot(data = diamonds, x = price, binwidth = 100, fill = I('#099DD9')) +
ggtitle('Price')
plot2 <- qplot(data = diamonds, x = price, binwidth = 0.01, fill = I('#F79420')) +
ggtitle('Price (log10)')
+ scale_x_log10()
grid.arrange(plot1, plot2, ncol = 2)
library(gridExtra)
library(grid)
plot1 <- qplot(data = diamonds, x = price, binwidth = 100, fill = I('#099DD9')) +
ggtitle('Price')
plot2 <- qplot(data = diamonds, x = price, binwidth = 0.01, fill = I('#F79420')) +
ggtitle('Price (log10)') +
scale_x_log10()
grid.arrange(plot1, plot2, ncol = 2)
qplot(data = diamonds, x = price, y = price) +
scale_y_continuous(trans = log10_trans()) +
ggtitle('Price Log(10) by Carat')
```{r cars}
library(plyr)
require(gdata)
getwd()
setwd("/Users/lalo/CodingComplications/DataScienceProjects/Doing_Data_Science/RollingSales")
library(plyr)
setwd("/Users/lalo/CodingComplication/DataScienceProjects/Doing_Data_Science")
library(plyr)
setwd("/Users/lalo/CodingComplication/DataScienceProjects/Doing_Data_Science/RollingSales/")
library(plyr)
require(gdata)
library(gdata)
install.packages('gdata')
require(gdata)
bk = read.xls('rollingsales_brooklyn.xls',pattern="BOROUGH")
head(bk)
bk$SALE.PRICE = as.numeric(gsub("[^[:digit:]]","", bk$SALE.PRICE))
count(is.na(bk$SALE.PRICE.N))
count(is.na(bk$SALE.PRICE))
count(is.na(bk$SALE.PRICE.N))
names(bk) = tolower(names(bk))
bk$gross.sqft = as.numeric(gsub("[^[:digit:]]", "", bk$gross.square.feet))
bk$land.sqft = as.numeric(gsub("[^[:digit:]]", "", bk$land.square.feet))
bk$sale.date = as.Date(bk$sale.date)
bk$year.built = as.numeric(as.character(bk$year.built))
attach(bk)
hist(SALE.PRICE.N)
attach(bk)
hist(SALE.PRICE)
hist(bk$SALE.PRICE)
attach(bk)
hist(sale.price.n)
hist(x=sale.price)
# Clean and Format the data into the correct format.
bk$gross.sqft = as.numeric(gsub("[^[:digit:]]", "", bk$gross.square.feet))
bk$land.sqft = as.numeric(gsub("[^[:digit:]]", "", bk$land.square.feet))
bk$sale.date = as.Date(bk$sale.date)
bk$year.built = as.numeric(as.character(bk$year.built))
bk.sale = bk[bk$sale.price != 0]
bk.sale = bk[bk$sale.price != 0, ]
attach(bk)
hist(x=sale.price)
hist(x=sale.price[sale.price>0])
hist(x=gross.sqft[sale.price==0])
detach(bk)
# Keep the useful data
bk.sale = bk[bk$sale.price != 0, ]
plot(bk$gross.sqft, bk.sale$sale.price)
plot(bk$gross.sqft, bk.sale$sale.price.n)
attach(bk)
hist(x=sale.price)
hist(x=sale.price.n[sale.price.n>0])
hist(x=gross.sqft[sale.price.n==0])
detach(bk)
# Keep the useful data
bk.sale = bk[bk$sale.price.n != 0, ]
plot(bk$gross.sqft, bk.sale$sale.price.n)
hist(x=bk$gross.sqft[bk$sale.price.n==0])
attach(bk)
hist(x=bk$sale.price)
hist(x=bk$sale.price.n[bk$sale.price.n>0])
hist(x=bk$gross.sqft[bk$sale.price.n==0])
detach(bk)
# Keep the useful data
bk.sale = bk[bk$sale.price.n != 0, ]
plot(bk$gross.sqft, bk.sale$sale.price.n)
