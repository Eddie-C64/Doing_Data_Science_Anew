getwd()
install.packages('reshape2')
?cut
setwd("CodingComplication/DataScienceProjects/EDA_Udacity/Multi_Variable_Exploration)
library('ggplot2')
data(diamonds)
qplot(data = diamonds, x = carat, y = price,
xlim = c(0, quantile(diamonds$carat, 0.99)),
ylim = c(0, quantile(diamonds$price, 0.99))) +
geom_point(color = I('black'), shape = 21)
qplot(data = diamonds, x = carat, y = price,
xlim = c(0, quantile(diamonds$carat, 0.99)),
ylim = c(0, quantile(diamonds$price, 0.99))) +
geom_point(color = I('blue'), shape = 21)
ggplot(data = diamonds,aes( x = carat, y = price)) +
scale_x_continuous(lim = c(0, quantile(diamonds$carat, 0.99))) +
scale_y_continuous(lim = c(0, quantile(diamonds$price, 0.99))) +
geom_point(color = I('blue'), alpha = 1/4)
ggplot(data = diamonds,aes( x = carat, y = price)) +
scale_x_continuous(lim = c(0, quantile(diamonds$carat, 0.99))) +
scale_y_continuous(lim = c(0, quantile(diamonds$price, 0.99))) +
geom_point(color = I('blue'), alpha = 1/4) +
stat_smooth(method = 'lm', formula = price ~ log(carat), se = F)
```
ggplot(data = diamonds,aes( x = carat, y = price)) +
scale_x_continuous(lim = c(0, quantile(diamonds$carat, 0.99))) +
scale_y_continuous(lim = c(0, quantile(diamonds$price, 0.99))) +
geom_point(color = I('blue'), alpha = 1/4) +
stat_smooth(method = 'lm', formula = diamonds$price ~ log(diamonds$carat), se = F)
library(GGally)
library(ggplot2)
library(scales)
library(memisc)
library(lattice)
library(MASS)
library(car)
library(reshape)
library(plyr)
data(diamonds)
ggplot(data = diamonds,aes( x = carat, y = price)) +
scale_x_continuous(lim = c(0, quantile(diamonds$carat, 0.99))) +
scale_y_continuous(lim = c(0, quantile(diamonds$price, 0.99))) +
geom_point(color = I('blue'), alpha = 1/4) +
stat_smooth(method = 'lm', formula = diamonds$price ~ log(diamonds$carat), se = F)
install.packages("car")
install.packages("scale")
install.packages("scales")
install.packages("scales")
install.packages("scales")
install.packages("scales")
install.packages("scales")
install.packages("memisc")
install.packages("MASS")
install.packages("reshape")
install.packages("plyr")
install.packages("plyr")
library(GGally)
library(ggplot2)
library(scales)
library(memisc)
library(lattice)
library(MASS)
library(car)
library(reshape)
library(plyr)
data(diamonds)
ggplot(data = diamonds,aes( x = carat, y = price)) +
scale_x_continuous(lim = c(0, quantile(diamonds$carat, 0.99))) +
scale_y_continuous(lim = c(0, quantile(diamonds$price, 0.99))) +
geom_point(color = I('blue'), alpha = 1/4) +
stat_smooth(method = 'lm', formula = diamonds$price ~ log(diamonds$carat), se = F)
library(GGally)
library(ggplot2)
library(scales)
library(memisc)
library(lattice)
library(MASS)
library(car)
library(reshape)
library(plyr)
library(gridExtra)
plot1 <- qplot(data = diamonds, x = carat, y = price) +
ggtitle('Price')
plot2 <- qplot(data = diamonds, x = log(carat), y = price) +
ggtitle('Price (log10)')
grid.arrange()
install.packages("gridExtra")
library(gridExtra)
plot1 <- qplot(data = diamonds, x = carat, y = price) +
ggtitle('Price')
plot2 <- qplot(data = diamonds, x = log(carat), y = price) +
ggtitle('Price (log10)')
grid.arrange()
library(gridExtra)
plot1 <- qplot(data = diamonds, x = price) +
ggtitle('Price')
plot2 <- qplot(data = diamonds, x = price) +
ggtitle('Price (log10)')
+ scale_x_log10()
grid.arrange()
install.packages(grid)
install.packages("grid")
install.packages("grid")
library(gridExtra)
library(grid)
plot1 <- qplot(data = diamonds, x = price) +
ggtitle('Price')
plot2 <- qplot(data = diamonds, x = price) +
ggtitle('Price (log10)')
+ scale_x_log10()
grid.arrange(plot1, plot2, ncol = 2)
plot1 <- qplot(data = diamonds, x = price, binwidth = 100, fill = I('#099DD9')) +
ggtitle('Price')
plot2 <- qplot(data = diamonds, x = price, binwidth = 0.01, fill = I('#F79420')) +
ggtitle('Price (log10)')
+ scale_x_log10()
grid.arrange(plot1, plot2, ncol = 2)
library(gridExtra)
library(grid)
plot1 <- qplot(data = diamonds, x = price, binwidth = 100, fill = I('#099DD9')) +
ggtitle('Price')
plot2 <- qplot(data = diamonds, x = price, binwidth = 0.01, fill = I('#F79420')) +
ggtitle('Price (log10)') +
scale_x_log10()
grid.arrange(plot1, plot2, ncol = 2)
qplot(data = diamonds, x = price, y = price) +
scale_y_continuous(trans = log10_trans()) +
ggtitle('Price Log(10) by Carat')
install.packages('rjson')
setwd('/Users/lalo/CodingComplication/DataScienceProjects/Doing_Data_Science_Anew/Regression Fun/')
require(rjson)
require(plyr)
dataPath <- "http://getglue-data.s3.amazonaws.com/getglue_sample.tar.gz"
theCon <- gzvon(url(dataPath))
n.rows <- 10
theLines <- readLines(theCon, n=n.rows)
str(theLines)
theLines[1]
theRead <- lapply(theLines[-1], fromJSON)
theData <- ldply(theRead, as.data.frame)
View(theData)
dataPath <- "http://getglue-data.s3.amazonaws.com/getglue_sample.tar.gz"
theCon <- gzvon(url(dataPath))
install.packages('gzvon')
setwd('/Users/lalo/CodingComplication/DataScienceProjects/Doing_Data_Science_Anew/Regression Fun/')
require(rjson)
require(plyr)
dataPath <- "http://getglue-data.s3.amazonaws.com/getglue_sample.tar.gz"
temp_file = download.file(dataPath, "tempPack.tar.gz")
theCon <- untar('tempePack.tar.gz')
setwd('/Users/lalo/CodingComplication/DataScienceProjects/Doing_Data_Science_Anew/Regression Fun/')
require(rjson)
require(plyr)
dataPath <- "http://getglue-data.s3.amazonaws.com/getglue_sample.tar.gz"
temp_file = download.file(dataPath, 'getglue_sample.tar.gz')
dataPath <- "http://getglue-data.s3.amazonaws.com/getglue_sample.tar.gz"
temp_file = download.file(dataPath)
